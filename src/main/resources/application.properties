spring.application.name=UserService
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/userservice
spring.datasource.username=userserviceuser
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql:true
server.port=7020
#These properties are also set in UserService\src\main\java\com\ecom\userservice\security\configurations\SecurityConfig.registeredClientRepository().java so these properties are commented.
#spring.data.jpa.auditing.enabled=true
#Properties for spring authorization server -https://docs.spring.io/spring-authorization-server/reference/getting-started.html
#spring.security.user.name=user
#spring.security.user.password=password
#
## OAuth2 client configuration
#spring.security.oauth2.client.registration.oidc-client.client-id=oidc-client
#spring.security.oauth2.client.registration.oidc-client.client-secret={noop}secret
#spring.security.oauth2.client.registration.oidc-client.client-authentication-method=client_secret_basic
#spring.security.oauth2.client.registration.oidc-client.authorization-grant-type=authorization_code,refresh_token
#spring.security.oauth2.client.registration.oidc-client.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.client.registration.oidc-client.post-logout-redirect-uri=http://127.0.0.1:8080/
#spring.security.oauth2.client.registration.oidc-client.scope=openid,profile
#spring.security.oauth2.client.registration.oidc-client.require-authorization-consent=true
#-------------------------
#Log level for verifying why tokens are not generated.
logging.level.org.springframework.security.*=TRACE
logging.level.org.springframework.web.*=TRACE